"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewFactory = void 0;
var metadata_interface_1 = require("../metadata-interface");
var michelson_storage_view_1 = require("./michelson-storage-view");
var ViewFactory = /** @class */ (function () {
    function ViewFactory() {
    }
    ViewFactory.prototype.getView = function (viewName, rpc, contract, viewImplementation) {
        if (this.isMichelsonStorageView(viewImplementation)) {
            var viewValues_1 = viewImplementation[metadata_interface_1.ViewImplementationType.MICHELSON_STORAGE];
            if (!viewValues_1.returnType || !viewValues_1.code) {
                console.warn(viewName + " is missing mandatory code or returnType property therefore it will be skipped.");
                return;
            }
            return function () {
                var view = new michelson_storage_view_1.MichelsonStorageView(viewName, contract, rpc, viewValues_1.returnType, viewValues_1.code, viewValues_1.parameter);
                return view;
            };
        }
    };
    ViewFactory.prototype.getImplementationType = function (viewImplementation) {
        return Object.keys(viewImplementation)[0];
    };
    ViewFactory.prototype.isMichelsonStorageView = function (viewImplementation) {
        return this.getImplementationType(viewImplementation) === metadata_interface_1.ViewImplementationType.MICHELSON_STORAGE;
    };
    return ViewFactory;
}());
exports.ViewFactory = ViewFactory;
//# sourceMappingURL=viewFactory.js.map